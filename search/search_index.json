{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]"},"docs":[{"location":"","text":"Blockthon Blockthon Python Package for Generate and Converting Wallet Private Key and Mnemonic for Address Bitcoin # on windows pip install Blockthon # on Linux pip3 install Blockthon or for download manual: git clone https://github.com/Blockthon/Blockthon cd Blockthon make Generate Private Key (Hex) [Random]: generated private key hex random with Blockthon in Python very fast for any os: import Blockthon PrivateKey = Blockthon.PrivateKey() Blockthon / Python Example: Generated Compressed Address and Un Compressed Address Wallet Bitcoin From Private Key Hex : example to AddrFromHex_CheckBalance.py Generated Compress and Un Compress Bitcoin Wallet Address : import Blockthon as block PrivateKey_ = block.PrivateKey() # Un Compress Bitcoin Wallet Address [Default : compress=false] unCompress_Address = block.Addr_From_PrivateKey(PrivateKey_) # Compress Bitcoin Wallet Address [Default : compress=True] Compress_Address = block.Addr_From_PrivateKey(PrivateKey_, True) Generated P2PKH , P2SH , P2WPKH , P2WSH , P2WSH in P2SH and P2WPKH in P2SH Bitcoin Address Type From Private Key (hex) : import Blockthon as block # Generated Random Private Key (HEX) privatekey = block.PrivateKey() # Generated P2PKH Address Bitcoin Address : p2pkh = block.P2PKH_From_PrivateKey(privatekey) # Generated P2SH Address Bitcoin Address : p2sh = block.P2SH_From_PrivateKey(privatekey) # Generated P2PKH Address Bitcoin Address : p2wpkh = block.P2WPKH_From_PrivateKey(privatekey) # Generated P2WSH Address Bitcoin Address : p2wsh = block.P2WSH_From_PrivateKey(privatekey) # Generated P2WPKH in P2SH Address Bitcoin Address : p2wpkh_p2sh = block.P2WPKH_in_P2SH_From_PrivateKey(privatekey) # Generated P2WSH in P2SH Address Bitcoin Address : p2wsh_in_p2sh = block.P2WSH_in_P2SH_From_PrivateKey(privatekey) Check Balance (Value) Bitcoin Wallet Address: for check balance per address wallet just use Balance() for bitcoin address's import Blockthon as block bitcoinAddress = \"179nEQKfizafpVkefed4XVSpdUpXzRSSvm\" balance_string = block.Balance(bitcoinAddress) Generated Ethereum Address From Private Key (HEX): generated ethereum address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.ETH_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Ethereum Address From Private Key (HEX) ethereum_Address = block.ETH_From_PrivateKey(privatekey) Check Value Balance Ethereum Address : import Blockthon as block address = \"0xe36B47dC83228FA6c3a50B07A820d3CdF7fAa700\" # Check Value Balance Return [str] balance = block.Balance_Ethereum(address) Generated Tron Address From Private Key (HEX): generated Tron address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.TRX_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Tron Address From Private Key (HEX) Tron_Address = block.TRX_From_PrivateKey(privatekey) Check Value Balance Tron Address : import Blockthon as block address = \"TDbLEetdDFLJcq19DrKk3yJAHpWfkQ418r\" # Check Value Balance Return [str] balance = block.Balance_Tron(address) Generated Dogecoin Address From Private Key (HEX): generated Dogecoin address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.DOGE_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Dogecoin Address From Private Key (HEX) Dogecoin_Address = block.DOGE_From_PrivateKey(privatekey) Check Value Balance Dogecoin Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Dogecoin(Dogecoin_Address) Generated Dash Address From Private Key (HEX): generated Dash address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.DASH_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Dash Address From Private Key (HEX) Dash_Address = block.DASH_From_PrivateKey(privatekey) Check Value Balance Dash Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Dash(Dash_Address) Generated Bitcoin Gold Address From Private Key (HEX): generated Bitcoin Gold address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.BTG_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Bitcoin Gold Address From Private Key (HEX) BitcoinGold_Address = block.BTG_From_PrivateKey(privatekey) Check Value Balance BitcoinGold Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_BitcoinGold(BitcoinGold_Address) Generated Litecoin Address From Private Key (HEX): generated Litecoin address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.LTC_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Litecoin Address From Private Key (HEX) Litecoin_Address = block.LTC_From_PrivateKey(privatekey) Check Value Balance Litecoin Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Litecoin(Litecoin_Address) Generated Ravencoin Address From Private Key (HEX): generated Ravencoin address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.RVN_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Ravencoin Address From Private Key (HEX) Ravencoin_Address = block.RVN_From_PrivateKey(privatekey) Check Value Balance Ravencoin Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Ravencoin(Ravencoin_Address) Generated DigiByte Address From Private Key (HEX): generated DigiByte address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.DigiByte_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated DigiByte Address From Private Key (HEX) DigiByte_Address = block.DigiByte_From_PrivateKey(privatekey) Check Value Balance DigiByte Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_DigiByte(DigiByte_Address) Generated VIA Address From Private Key (HEX): generated VIA address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.VIA_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated VIA Address From Private Key (HEX) VIA_Address = block.VIA_From_PrivateKey(privatekey) Generated QTUM Address From Private Key (HEX): generated QTUM address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.QTUM_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated QTUM Address From Private Key (HEX) QTUM_Address = block.QTUM_From_PrivateKey(privatekey) Check Value Balance Qtum Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Qtum(Qtum_Address) Generated ZCASH Address From Private Key (HEX): generated ZCASH address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.ZEC_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated ZEC Address From Private Key (HEX) ZEC_Address = block.ZEC_From_PrivateKey(privatekey) Check Value Balance zCash Address : import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_zCash(zCash_Address) Example Blockthon on bash : source Blockthon.sh # counter for total generated count=0 # for repeate new generated while true do ((count++)) # from blockthon file import for generated new private key key=$(PrivateKey) # for print or echo detail's echo $count $key done Generated Random Private Key from Integer (Number) on bash With Blockthon: #!/bin/bash source Blockthon.sh z=0 while true do d=$((19999999999999999 + RANDOM % 999999999999999999999999999999999999)) key=$(PrivateKey $d) ((z++)) echo -ne \"Total: $z $key\\r\" done","title":"Home"},{"location":"#blockthon","text":"Blockthon Python Package for Generate and Converting Wallet Private Key and Mnemonic for Address Bitcoin # on windows pip install Blockthon # on Linux pip3 install Blockthon or for download manual: git clone https://github.com/Blockthon/Blockthon cd Blockthon make","title":"Blockthon"},{"location":"#generate-private-key-hex-random","text":"generated private key hex random with Blockthon in Python very fast for any os: import Blockthon PrivateKey = Blockthon.PrivateKey()","title":"Generate Private Key (Hex) [Random]:"},{"location":"#blockthon-python-example","text":"Generated Compressed Address and Un Compressed Address Wallet Bitcoin From Private Key Hex : example to AddrFromHex_CheckBalance.py","title":"Blockthon / Python Example:"},{"location":"#generated-compress-and-un-compress-bitcoin-wallet-address","text":"import Blockthon as block PrivateKey_ = block.PrivateKey() # Un Compress Bitcoin Wallet Address [Default : compress=false] unCompress_Address = block.Addr_From_PrivateKey(PrivateKey_) # Compress Bitcoin Wallet Address [Default : compress=True] Compress_Address = block.Addr_From_PrivateKey(PrivateKey_, True)","title":"Generated Compress and Un Compress Bitcoin Wallet Address :"},{"location":"#generated-p2pkh-p2sh-p2wpkh-p2wsh-p2wsh-in-p2sh-and-p2wpkh-in-p2sh-bitcoin-address-type-from-private-key-hex","text":"import Blockthon as block # Generated Random Private Key (HEX) privatekey = block.PrivateKey() # Generated P2PKH Address Bitcoin Address : p2pkh = block.P2PKH_From_PrivateKey(privatekey) # Generated P2SH Address Bitcoin Address : p2sh = block.P2SH_From_PrivateKey(privatekey) # Generated P2PKH Address Bitcoin Address : p2wpkh = block.P2WPKH_From_PrivateKey(privatekey) # Generated P2WSH Address Bitcoin Address : p2wsh = block.P2WSH_From_PrivateKey(privatekey) # Generated P2WPKH in P2SH Address Bitcoin Address : p2wpkh_p2sh = block.P2WPKH_in_P2SH_From_PrivateKey(privatekey) # Generated P2WSH in P2SH Address Bitcoin Address : p2wsh_in_p2sh = block.P2WSH_in_P2SH_From_PrivateKey(privatekey)","title":"Generated P2PKH , P2SH , P2WPKH , P2WSH , P2WSH in P2SH and P2WPKH in P2SH Bitcoin Address Type From Private Key (hex) :"},{"location":"#check-balance-value-bitcoin-wallet-address","text":"","title":"Check Balance (Value) Bitcoin Wallet Address:"},{"location":"#for-check-balance-per-address-wallet-just-use-balance-for-bitcoin-addresss","text":"import Blockthon as block bitcoinAddress = \"179nEQKfizafpVkefed4XVSpdUpXzRSSvm\" balance_string = block.Balance(bitcoinAddress)","title":"for check balance per address wallet just use Balance() for bitcoin address's"},{"location":"#generated-ethereum-address-from-private-key-hex","text":"generated ethereum address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.ETH_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Ethereum Address From Private Key (HEX) ethereum_Address = block.ETH_From_PrivateKey(privatekey)","title":"Generated Ethereum Address From Private Key (HEX):"},{"location":"#check-value-balance-ethereum-address","text":"import Blockthon as block address = \"0xe36B47dC83228FA6c3a50B07A820d3CdF7fAa700\" # Check Value Balance Return [str] balance = block.Balance_Ethereum(address)","title":"Check Value Balance Ethereum Address :"},{"location":"#generated-tron-address-from-private-key-hex","text":"generated Tron address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.TRX_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Tron Address From Private Key (HEX) Tron_Address = block.TRX_From_PrivateKey(privatekey)","title":"Generated Tron Address From Private Key (HEX):"},{"location":"#check-value-balance-tron-address","text":"import Blockthon as block address = \"TDbLEetdDFLJcq19DrKk3yJAHpWfkQ418r\" # Check Value Balance Return [str] balance = block.Balance_Tron(address)","title":"Check Value Balance Tron Address :"},{"location":"#generated-dogecoin-address-from-private-key-hex","text":"generated Dogecoin address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.DOGE_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Dogecoin Address From Private Key (HEX) Dogecoin_Address = block.DOGE_From_PrivateKey(privatekey)","title":"Generated Dogecoin Address From Private Key (HEX):"},{"location":"#check-value-balance-dogecoin-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Dogecoin(Dogecoin_Address)","title":"Check Value Balance Dogecoin Address :"},{"location":"#generated-dash-address-from-private-key-hex","text":"generated Dash address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.DASH_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Dash Address From Private Key (HEX) Dash_Address = block.DASH_From_PrivateKey(privatekey)","title":"Generated Dash Address From Private Key (HEX):"},{"location":"#check-value-balance-dash-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Dash(Dash_Address)","title":"Check Value Balance Dash Address :"},{"location":"#generated-bitcoin-gold-address-from-private-key-hex","text":"generated Bitcoin Gold address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.BTG_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Bitcoin Gold Address From Private Key (HEX) BitcoinGold_Address = block.BTG_From_PrivateKey(privatekey)","title":"Generated Bitcoin Gold Address From Private Key (HEX):"},{"location":"#check-value-balance-bitcoingold-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_BitcoinGold(BitcoinGold_Address)","title":"Check Value Balance BitcoinGold Address :"},{"location":"#generated-litecoin-address-from-private-key-hex","text":"generated Litecoin address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.LTC_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Litecoin Address From Private Key (HEX) Litecoin_Address = block.LTC_From_PrivateKey(privatekey)","title":"Generated Litecoin Address From Private Key (HEX):"},{"location":"#check-value-balance-litecoin-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Litecoin(Litecoin_Address)","title":"Check Value Balance Litecoin Address :"},{"location":"#generated-ravencoin-address-from-private-key-hex","text":"generated Ravencoin address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.RVN_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated Ravencoin Address From Private Key (HEX) Ravencoin_Address = block.RVN_From_PrivateKey(privatekey)","title":"Generated Ravencoin Address From Private Key (HEX):"},{"location":"#check-value-balance-ravencoin-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Ravencoin(Ravencoin_Address)","title":"Check Value Balance Ravencoin Address :"},{"location":"#generated-digibyte-address-from-private-key-hex","text":"generated DigiByte address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.DigiByte_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated DigiByte Address From Private Key (HEX) DigiByte_Address = block.DigiByte_From_PrivateKey(privatekey)","title":"Generated DigiByte Address From Private Key (HEX):"},{"location":"#check-value-balance-digibyte-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_DigiByte(DigiByte_Address)","title":"Check Value Balance DigiByte Address :"},{"location":"#generated-via-address-from-private-key-hex","text":"generated VIA address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.VIA_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated VIA Address From Private Key (HEX) VIA_Address = block.VIA_From_PrivateKey(privatekey)","title":"Generated VIA Address From Private Key (HEX):"},{"location":"#generated-qtum-address-from-private-key-hex","text":"generated QTUM address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.QTUM_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated QTUM Address From Private Key (HEX) QTUM_Address = block.QTUM_From_PrivateKey(privatekey)","title":"Generated QTUM Address From Private Key (HEX):"},{"location":"#check-value-balance-qtum-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_Qtum(Qtum_Address)","title":"Check Value Balance Qtum Address :"},{"location":"#generated-zcash-address-from-private-key-hex","text":"generated ZCASH address wallet from private key (hex) , in this example first generated private key random , after that generated address from private key with block.ZEC_From_PrivateKey(privatekey) , first needed import import Blockthon as block . import Blockthon as block # Generated Random Hex (Private key) privatekey = block.PrivateKey() # Generated ZEC Address From Private Key (HEX) ZEC_Address = block.ZEC_From_PrivateKey(privatekey)","title":"Generated ZCASH Address From Private Key (HEX):"},{"location":"#check-value-balance-zcash-address","text":"import Blockthon as block # Check Value Balance Return [str] balance = block.Balance_zCash(zCash_Address)","title":"Check Value Balance zCash Address :"},{"location":"#example-blockthon-on-bash","text":"source Blockthon.sh # counter for total generated count=0 # for repeate new generated while true do ((count++)) # from blockthon file import for generated new private key key=$(PrivateKey) # for print or echo detail's echo $count $key done Generated Random Private Key from Integer (Number) on bash With Blockthon: #!/bin/bash source Blockthon.sh z=0 while true do d=$((19999999999999999 + RANDOM % 999999999999999999999999999999999999)) key=$(PrivateKey $d) ((z++)) echo -ne \"Total: $z $key\\r\" done","title":"Example Blockthon on bash:"},{"location":"contact/","text":"Blockthon / Easy And Fast Hunting Programmer and Owner : PyMmdrza Official Website : Mmdrza.Com | Email : PyMmdrza@Gmail.Com | Telegram ID : @MrPyMmdrza | Medium : Mdrza.Medium.com | Github : PyMmdrza","title":"contact"},{"location":"contact/#blockthon-easy-and-fast-hunting","text":"Programmer and Owner : PyMmdrza Official Website : Mmdrza.Com | Email : PyMmdrza@Gmail.Com | Telegram ID : @MrPyMmdrza | Medium : Mdrza.Medium.com | Github : PyMmdrza","title":"Blockthon / Easy And Fast Hunting"},{"location":"example/","text":"Blockthon Example Script: Generated Multi Address (Bitcoin Compress & un Compress Address and Ethereum Address with TRON [trx]) From Private Key Hex and Check Value Balance : EXAMPLE Generated Ethereum Address Wallet From Private Key (HEX) and Check Value Balance : EXAMPLE Generated Litecoin Address Wallet From Private Key (HEX) and Check Value Balance : EXAMPLE Generated Dogecoin Address Wallet From Private Key (HEX) and Check Value Balance : EXAMPLE Generated TRON Address Wallet and Check Value Balance : EXAMPLE Generated BitcoinGold Address Wallet and Check Value Balance : EXAMPLE Generated Ravencoin Address Wallet and Check Value Balance : EXAMPLE Generated Qtum Address Wallet and Check Value Balance : EXAMPLE Generated zCash Address Wallet and Check Value Balance : EXAMPLE","title":"Example"},{"location":"example/#blockthon","text":"","title":"Blockthon"},{"location":"example/#example-script","text":"","title":"Example Script:"},{"location":"example/#generated-multi-address-bitcoin-compress-un-compress-address-and-ethereum-address-with-tron-trx-from-private-key-hex-and-check-value-balance-example","text":"","title":"Generated Multi Address (Bitcoin Compress &amp; un Compress Address and Ethereum Address with TRON [trx]) From Private Key Hex and Check Value Balance : EXAMPLE"},{"location":"example/#generated-ethereum-address-wallet-from-private-key-hex-and-check-value-balance-example","text":"","title":"Generated Ethereum Address Wallet From Private Key (HEX) and Check Value Balance : EXAMPLE"},{"location":"example/#generated-litecoin-address-wallet-from-private-key-hex-and-check-value-balance-example","text":"","title":"Generated Litecoin Address Wallet From Private Key (HEX) and Check Value Balance : EXAMPLE"},{"location":"example/#generated-dogecoin-address-wallet-from-private-key-hex-and-check-value-balance-example","text":"","title":"Generated Dogecoin Address Wallet From Private Key (HEX) and Check Value Balance : EXAMPLE"},{"location":"example/#generated-tron-address-wallet-and-check-value-balance-example","text":"","title":"Generated TRON Address Wallet and Check Value Balance : EXAMPLE"},{"location":"example/#generated-bitcoingold-address-wallet-and-check-value-balance-example","text":"","title":"Generated BitcoinGold Address Wallet and Check Value Balance : EXAMPLE"},{"location":"example/#generated-ravencoin-address-wallet-and-check-value-balance-example","text":"","title":"Generated Ravencoin Address Wallet and Check Value Balance : EXAMPLE"},{"location":"example/#generated-qtum-address-wallet-and-check-value-balance-example","text":"","title":"Generated Qtum Address Wallet and Check Value Balance : EXAMPLE"},{"location":"example/#generated-zcash-address-wallet-and-check-value-balance-example","text":"","title":"Generated zCash Address Wallet and Check Value Balance : EXAMPLE"},{"location":"faq/","text":"Blockthon - Batch Generated Cryptocurrency Wallet Service's Generate Private Key & Mnemonic and Convert Seed's Bytes To Binary For Bitcoin , Ethereum , Tron , Bitcoin Gold, Dogecoin, Litecoin , VIA , DASHCoin , zCash and Qtum , Ravencoin ... How To Install Blockthon Generated Private Key (HEX) Random Generated Compressed and UnCompressed Bitcoin Wallet Address Generated P2PKH / P2SH / P2WPKH / P2WSH / P2WSH in P2SH and P2WPKH in P2SH Bitcoin Address Type Check Balance Value From Bitcoin Address Generated Ethereum Address From Private Key (HEX) Check Balance Value From Ethereum Address Generated TRON (TRX) Address From Private Key (HEX) Check Balance Value From Tron Address Generated Dogecoin Address From Private Key (HEX) Check Balance Value From Dogecoin Address Generated Dash Address From Private Key (HEX) Check Balance Value From Dash Address Generated Bitcoin Gold Address From Private Key (HEX) Check Balance Value From Bitcoin Gold Address Generated Litecoin Address From Private Key (HEX) Check Balance Value From Litecoin Address Generated Qtum Address From Private Key (HEX) Check Balance Value From QTUM Address Generated DigiByte Address From Private Key (HEX) Check Balance Value From DigiByte Address Generated ZCASH Address From Private Key (HEX) Check Balance Value From ZCASH Address Generated Raven Coin Address From Private Key (HEX) Check Balance Value From Ravencoin (RVN) Address Generated VIA Address From Private Key (HEX) installing and use need first download with git : git clone https://github.com/Blockthon/Blockthon cd Blockthon # For First useing in Windows Just Run Make File For Installing Package's ./make.bat # or pip install -r requirements.txt on linux (debian) sudo apt-get update&&sudo apt-get upgrade -y git clone https://github.com/Blockthon/Blockthon cd Blockthon pip3 install -r requirements.txt","title":"FAQ"},{"location":"faq/#blockthon-batch-generated-cryptocurrency-wallet-services","text":"","title":"Blockthon - Batch Generated Cryptocurrency Wallet Service's"},{"location":"faq/#generate-private-key-mnemonic-and-convert-seeds-bytes-to-binary-for-bitcoin-ethereum-tron-bitcoin-gold-dogecoin-litecoin-via-dashcoin-zcash-and-qtum-ravencoin","text":"","title":"Generate Private Key &amp; Mnemonic and Convert Seed's Bytes To Binary For Bitcoin , Ethereum , Tron , Bitcoin Gold, Dogecoin, Litecoin , VIA , DASHCoin , zCash and Qtum , Ravencoin ..."},{"location":"faq/#how-to-install-blockthon","text":"","title":"How To Install Blockthon"},{"location":"faq/#generated-private-key-hex-random","text":"","title":"Generated Private Key (HEX) Random"},{"location":"faq/#generated-compressed-and-uncompressed-bitcoin-wallet-address","text":"","title":"Generated Compressed and UnCompressed Bitcoin Wallet Address"},{"location":"faq/#generated-p2pkh-p2sh-p2wpkh-p2wsh-p2wsh-in-p2sh-and-p2wpkh-in-p2sh-bitcoin-address-type","text":"","title":"Generated P2PKH / P2SH / P2WPKH / P2WSH / P2WSH in P2SH and P2WPKH in P2SH Bitcoin Address Type"},{"location":"faq/#check-balance-value-from-bitcoin-address","text":"","title":"Check Balance Value From Bitcoin Address"},{"location":"faq/#generated-ethereum-address-from-private-key-hex","text":"","title":"Generated Ethereum Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-ethereum-address","text":"","title":"Check Balance Value From Ethereum Address"},{"location":"faq/#generated-tron-trx-address-from-private-key-hex","text":"","title":"Generated TRON (TRX) Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-tron-address","text":"","title":"Check Balance Value From Tron Address"},{"location":"faq/#generated-dogecoin-address-from-private-key-hex","text":"","title":"Generated Dogecoin Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-dogecoin-address","text":"","title":"Check Balance Value From Dogecoin Address"},{"location":"faq/#generated-dash-address-from-private-key-hex","text":"","title":"Generated Dash Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-dash-address","text":"","title":"Check Balance Value From Dash Address"},{"location":"faq/#generated-bitcoin-gold-address-from-private-key-hex","text":"","title":"Generated Bitcoin Gold Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-bitcoin-gold-address","text":"","title":"Check Balance Value From Bitcoin Gold Address"},{"location":"faq/#generated-litecoin-address-from-private-key-hex","text":"","title":"Generated Litecoin Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-litecoin-address","text":"","title":"Check Balance Value From Litecoin Address"},{"location":"faq/#generated-qtum-address-from-private-key-hex","text":"","title":"Generated Qtum Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-qtum-address","text":"","title":"Check Balance Value From QTUM Address"},{"location":"faq/#generated-digibyte-address-from-private-key-hex","text":"","title":"Generated DigiByte Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-digibyte-address","text":"","title":"Check Balance Value From DigiByte Address"},{"location":"faq/#generated-zcash-address-from-private-key-hex","text":"","title":"Generated ZCASH Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-zcash-address","text":"","title":"Check Balance Value From ZCASH Address"},{"location":"faq/#generated-raven-coin-address-from-private-key-hex","text":"","title":"Generated Raven Coin Address From Private Key (HEX)"},{"location":"faq/#check-balance-value-from-ravencoin-rvn-address","text":"","title":"Check Balance Value From Ravencoin (RVN) Address"},{"location":"faq/#generated-via-address-from-private-key-hex","text":"installing and use need first download with git : git clone https://github.com/Blockthon/Blockthon cd Blockthon # For First useing in Windows Just Run Make File For Installing Package's ./make.bat # or pip install -r requirements.txt on linux (debian) sudo apt-get update&&sudo apt-get upgrade -y git clone https://github.com/Blockthon/Blockthon cd Blockthon pip3 install -r requirements.txt","title":"Generated VIA Address From Private Key (HEX)"}]}